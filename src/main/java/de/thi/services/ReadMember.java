package de.thi.services;

import org.camunda.bpm.engine.delegate.DelegateExecution;
import org.camunda.bpm.engine.delegate.JavaDelegate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import spinjar.com.fasterxml.jackson.databind.ObjectMapper;
import spinjar.com.fasterxml.jackson.databind.type.CollectionType;

import java.util.List;

public class ReadMember implements JavaDelegate {

    // Get Logger
    private static final Logger LOG = LoggerFactory.getLogger(ReadMember.class);

    @Override
    public void execute(DelegateExecution execution) throws Exception {
        LOG.info("ReadMember called");

        // Read Json
        String pathToJson = "benutzer.json";
        String jsonString = ReadJsonFile.readFile(pathToJson);

        // <-- Generated by ChatGPT

        // Erzeuge einen ObjectMapper
        ObjectMapper objectMapper = new ObjectMapper();

        // Erzeuge den CollectionType fÃ¼r die Deserialisierung der List<User>
        CollectionType listType = objectMapper.getTypeFactory().constructCollectionType(List.class, User.class);

        // Konvertiere das JSON-Array in eine List<User>
        List<User> userList = objectMapper.readValue(jsonString, listType);

        //  Generated by ChatGPT -->

        execution.setVariable("userList",userList);
    }
}
